// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_info.proto

#include "user_info.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR Date::Date(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.year_)*/0
  , /*decltype(_impl_.month_)*/0
  , /*decltype(_impl_.day_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DateDefaultTypeInternal() {}
  union {
    Date _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DateDefaultTypeInternal _Date_default_instance_;
PROTOBUF_CONSTEXPR SetUserInfoRequest::SetUserInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.first_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.last_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.phone_number_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.date_of_birth_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetUserInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetUserInfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetUserInfoRequestDefaultTypeInternal() {}
  union {
    SetUserInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetUserInfoRequestDefaultTypeInternal _SetUserInfoRequest_default_instance_;
PROTOBUF_CONSTEXPR SetUserInfoResponse::SetUserInfoResponse(
    ::_pbi::ConstantInitialized) {}
struct SetUserInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetUserInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetUserInfoResponseDefaultTypeInternal() {}
  union {
    SetUserInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetUserInfoResponseDefaultTypeInternal _SetUserInfoResponse_default_instance_;
static ::_pb::Metadata file_level_metadata_user_5finfo_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_user_5finfo_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_user_5finfo_2eproto = nullptr;

const uint32_t TableStruct_user_5finfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Date, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Date, _impl_.year_),
  PROTOBUF_FIELD_OFFSET(::Date, _impl_.month_),
  PROTOBUF_FIELD_OFFSET(::Date, _impl_.day_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SetUserInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SetUserInfoRequest, _impl_.first_name_),
  PROTOBUF_FIELD_OFFSET(::SetUserInfoRequest, _impl_.last_name_),
  PROTOBUF_FIELD_OFFSET(::SetUserInfoRequest, _impl_.date_of_birth_),
  PROTOBUF_FIELD_OFFSET(::SetUserInfoRequest, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::SetUserInfoRequest, _impl_.phone_number_),
  PROTOBUF_FIELD_OFFSET(::SetUserInfoRequest, _impl_.timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SetUserInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Date)},
  { 9, -1, -1, sizeof(::SetUserInfoRequest)},
  { 21, -1, -1, sizeof(::SetUserInfoResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_Date_default_instance_._instance,
  &::_SetUserInfoRequest_default_instance_._instance,
  &::_SetUserInfoResponse_default_instance_._instance,
};

const char descriptor_table_protodef_user_5finfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017user_info.proto\032\037google/protobuf/times"
  "tamp.proto\"0\n\004Date\022\014\n\004year\030\001 \001(\005\022\r\n\005mont"
  "h\030\002 \001(\005\022\013\n\003day\030\003 \001(\005\"\255\001\n\022SetUserInfoRequ"
  "est\022\022\n\nfirst_name\030\001 \001(\t\022\021\n\tlast_name\030\002 \001"
  "(\t\022\034\n\rdate_of_birth\030\003 \001(\0132\005.Date\022\r\n\005emai"
  "l\030\004 \001(\t\022\024\n\014phone_number\030\005 \001(\t\022-\n\ttimesta"
  "mp\030\006 \001(\0132\032.google.protobuf.Timestamp\"\025\n\023"
  "SetUserInfoResponse2F\n\010UserInfo\022:\n\013SetUs"
  "erInfo\022\023.SetUserInfoRequest\032\024.SetUserInf"
  "oResponse\"\000B\032\n\030com.userinfoservice.grpcb"
  "\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_user_5finfo_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_user_5finfo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_user_5finfo_2eproto = {
    false, false, 407, descriptor_table_protodef_user_5finfo_2eproto,
    "user_info.proto",
    &descriptor_table_user_5finfo_2eproto_once, descriptor_table_user_5finfo_2eproto_deps, 1, 3,
    schemas, file_default_instances, TableStruct_user_5finfo_2eproto::offsets,
    file_level_metadata_user_5finfo_2eproto, file_level_enum_descriptors_user_5finfo_2eproto,
    file_level_service_descriptors_user_5finfo_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_user_5finfo_2eproto_getter() {
  return &descriptor_table_user_5finfo_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_user_5finfo_2eproto(&descriptor_table_user_5finfo_2eproto);

// ===================================================================

class Date::_Internal {
 public:
};

Date::Date(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Date)
}
Date::Date(const Date& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Date* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.year_){}
    , decltype(_impl_.month_){}
    , decltype(_impl_.day_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.year_, &from._impl_.year_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.day_) -
    reinterpret_cast<char*>(&_impl_.year_)) + sizeof(_impl_.day_));
  // @@protoc_insertion_point(copy_constructor:Date)
}

inline void Date::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.year_){0}
    , decltype(_impl_.month_){0}
    , decltype(_impl_.day_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Date::~Date() {
  // @@protoc_insertion_point(destructor:Date)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Date::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Date::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Date::Clear() {
// @@protoc_insertion_point(message_clear_start:Date)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.year_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.day_) -
      reinterpret_cast<char*>(&_impl_.year_)) + sizeof(_impl_.day_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Date::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 year = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.year_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 month = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.month_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 day = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.day_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Date::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Date)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 year = 1;
  if (this->_internal_year() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_year(), target);
  }

  // int32 month = 2;
  if (this->_internal_month() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_month(), target);
  }

  // int32 day = 3;
  if (this->_internal_day() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_day(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Date)
  return target;
}

size_t Date::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Date)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 year = 1;
  if (this->_internal_year() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_year());
  }

  // int32 month = 2;
  if (this->_internal_month() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_month());
  }

  // int32 day = 3;
  if (this->_internal_day() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_day());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Date::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Date::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Date::GetClassData() const { return &_class_data_; }


void Date::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Date*>(&to_msg);
  auto& from = static_cast<const Date&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Date)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_year() != 0) {
    _this->_internal_set_year(from._internal_year());
  }
  if (from._internal_month() != 0) {
    _this->_internal_set_month(from._internal_month());
  }
  if (from._internal_day() != 0) {
    _this->_internal_set_day(from._internal_day());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Date::CopyFrom(const Date& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Date)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Date::IsInitialized() const {
  return true;
}

void Date::InternalSwap(Date* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Date, _impl_.day_)
      + sizeof(Date::_impl_.day_)
      - PROTOBUF_FIELD_OFFSET(Date, _impl_.year_)>(
          reinterpret_cast<char*>(&_impl_.year_),
          reinterpret_cast<char*>(&other->_impl_.year_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Date::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5finfo_2eproto_getter, &descriptor_table_user_5finfo_2eproto_once,
      file_level_metadata_user_5finfo_2eproto[0]);
}

// ===================================================================

class SetUserInfoRequest::_Internal {
 public:
  static const ::Date& date_of_birth(const SetUserInfoRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& timestamp(const SetUserInfoRequest* msg);
};

const ::Date&
SetUserInfoRequest::_Internal::date_of_birth(const SetUserInfoRequest* msg) {
  return *msg->_impl_.date_of_birth_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SetUserInfoRequest::_Internal::timestamp(const SetUserInfoRequest* msg) {
  return *msg->_impl_.timestamp_;
}
void SetUserInfoRequest::clear_timestamp() {
  if (GetArenaForAllocation() == nullptr && _impl_.timestamp_ != nullptr) {
    delete _impl_.timestamp_;
  }
  _impl_.timestamp_ = nullptr;
}
SetUserInfoRequest::SetUserInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SetUserInfoRequest)
}
SetUserInfoRequest::SetUserInfoRequest(const SetUserInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetUserInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.first_name_){}
    , decltype(_impl_.last_name_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.phone_number_){}
    , decltype(_impl_.date_of_birth_){nullptr}
    , decltype(_impl_.timestamp_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.first_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.first_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_first_name().empty()) {
    _this->_impl_.first_name_.Set(from._internal_first_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.last_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.last_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_name().empty()) {
    _this->_impl_.last_name_.Set(from._internal_last_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  _impl_.phone_number_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.phone_number_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_phone_number().empty()) {
    _this->_impl_.phone_number_.Set(from._internal_phone_number(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_date_of_birth()) {
    _this->_impl_.date_of_birth_ = new ::Date(*from._impl_.date_of_birth_);
  }
  if (from._internal_has_timestamp()) {
    _this->_impl_.timestamp_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.timestamp_);
  }
  // @@protoc_insertion_point(copy_constructor:SetUserInfoRequest)
}

inline void SetUserInfoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.first_name_){}
    , decltype(_impl_.last_name_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.phone_number_){}
    , decltype(_impl_.date_of_birth_){nullptr}
    , decltype(_impl_.timestamp_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.first_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.first_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.last_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.phone_number_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.phone_number_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetUserInfoRequest::~SetUserInfoRequest() {
  // @@protoc_insertion_point(destructor:SetUserInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetUserInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.first_name_.Destroy();
  _impl_.last_name_.Destroy();
  _impl_.email_.Destroy();
  _impl_.phone_number_.Destroy();
  if (this != internal_default_instance()) delete _impl_.date_of_birth_;
  if (this != internal_default_instance()) delete _impl_.timestamp_;
}

void SetUserInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetUserInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SetUserInfoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.first_name_.ClearToEmpty();
  _impl_.last_name_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.phone_number_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.date_of_birth_ != nullptr) {
    delete _impl_.date_of_birth_;
  }
  _impl_.date_of_birth_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.timestamp_ != nullptr) {
    delete _impl_.timestamp_;
  }
  _impl_.timestamp_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetUserInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string first_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_first_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SetUserInfoRequest.first_name"));
        } else
          goto handle_unusual;
        continue;
      // string last_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_last_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SetUserInfoRequest.last_name"));
        } else
          goto handle_unusual;
        continue;
      // .Date date_of_birth = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_date_of_birth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string email = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SetUserInfoRequest.email"));
        } else
          goto handle_unusual;
        continue;
      // string phone_number = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_phone_number();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SetUserInfoRequest.phone_number"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp timestamp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetUserInfoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SetUserInfoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string first_name = 1;
  if (!this->_internal_first_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_first_name().data(), static_cast<int>(this->_internal_first_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SetUserInfoRequest.first_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_first_name(), target);
  }

  // string last_name = 2;
  if (!this->_internal_last_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_name().data(), static_cast<int>(this->_internal_last_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SetUserInfoRequest.last_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_last_name(), target);
  }

  // .Date date_of_birth = 3;
  if (this->_internal_has_date_of_birth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::date_of_birth(this),
        _Internal::date_of_birth(this).GetCachedSize(), target, stream);
  }

  // string email = 4;
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SetUserInfoRequest.email");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_email(), target);
  }

  // string phone_number = 5;
  if (!this->_internal_phone_number().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_phone_number().data(), static_cast<int>(this->_internal_phone_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SetUserInfoRequest.phone_number");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_phone_number(), target);
  }

  // .google.protobuf.Timestamp timestamp = 6;
  if (this->_internal_has_timestamp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetUserInfoRequest)
  return target;
}

size_t SetUserInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetUserInfoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string first_name = 1;
  if (!this->_internal_first_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_first_name());
  }

  // string last_name = 2;
  if (!this->_internal_last_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_name());
  }

  // string email = 4;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string phone_number = 5;
  if (!this->_internal_phone_number().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_phone_number());
  }

  // .Date date_of_birth = 3;
  if (this->_internal_has_date_of_birth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.date_of_birth_);
  }

  // .google.protobuf.Timestamp timestamp = 6;
  if (this->_internal_has_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.timestamp_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetUserInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetUserInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetUserInfoRequest::GetClassData() const { return &_class_data_; }


void SetUserInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetUserInfoRequest*>(&to_msg);
  auto& from = static_cast<const SetUserInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SetUserInfoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_first_name().empty()) {
    _this->_internal_set_first_name(from._internal_first_name());
  }
  if (!from._internal_last_name().empty()) {
    _this->_internal_set_last_name(from._internal_last_name());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_phone_number().empty()) {
    _this->_internal_set_phone_number(from._internal_phone_number());
  }
  if (from._internal_has_date_of_birth()) {
    _this->_internal_mutable_date_of_birth()->::Date::MergeFrom(
        from._internal_date_of_birth());
  }
  if (from._internal_has_timestamp()) {
    _this->_internal_mutable_timestamp()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetUserInfoRequest::CopyFrom(const SetUserInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetUserInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserInfoRequest::IsInitialized() const {
  return true;
}

void SetUserInfoRequest::InternalSwap(SetUserInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.first_name_, lhs_arena,
      &other->_impl_.first_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.last_name_, lhs_arena,
      &other->_impl_.last_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.phone_number_, lhs_arena,
      &other->_impl_.phone_number_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetUserInfoRequest, _impl_.timestamp_)
      + sizeof(SetUserInfoRequest::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(SetUserInfoRequest, _impl_.date_of_birth_)>(
          reinterpret_cast<char*>(&_impl_.date_of_birth_),
          reinterpret_cast<char*>(&other->_impl_.date_of_birth_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetUserInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5finfo_2eproto_getter, &descriptor_table_user_5finfo_2eproto_once,
      file_level_metadata_user_5finfo_2eproto[1]);
}

// ===================================================================

class SetUserInfoResponse::_Internal {
 public:
};

SetUserInfoResponse::SetUserInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:SetUserInfoResponse)
}
SetUserInfoResponse::SetUserInfoResponse(const SetUserInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SetUserInfoResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SetUserInfoResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetUserInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetUserInfoResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetUserInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_user_5finfo_2eproto_getter, &descriptor_table_user_5finfo_2eproto_once,
      file_level_metadata_user_5finfo_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Date*
Arena::CreateMaybeMessage< ::Date >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Date >(arena);
}
template<> PROTOBUF_NOINLINE ::SetUserInfoRequest*
Arena::CreateMaybeMessage< ::SetUserInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SetUserInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::SetUserInfoResponse*
Arena::CreateMaybeMessage< ::SetUserInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SetUserInfoResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
